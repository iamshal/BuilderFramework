name: Test Automation CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: testdb
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      
      kafka:
        image: confluentinc/cp-kafka:latest
        env:
          KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
          KAFKA_PROCESS_ROLES: broker
          KAFKA_NODE_ID: 1
          KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          CLUSTER_ID: 4L6g3nShT-eMCtK--X86sw
        ports:
          - 9092:9092
        options: --health-cmd="kafka-topics --bootstrap-server localhost:9092 --list" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Run Unit Tests
      run: mvn clean test -Dtest=SimpleTests
      env:
        DB_URL: jdbc:mysql://localhost:3306/testdb
        KAFKA_BROKER: localhost:9092
    
    - name: Run API Tests
      run: mvn test -Dtest=ApiTests
      env:
        DB_URL: jdbc:mysql://localhost:3306/testdb
        KAFKA_BROKER: localhost:9092
    
    - name: Run UI Tests
      run: mvn test -Dtest=UITests
      env:
        DB_URL: jdbc:mysql://localhost:3306/testdb
        KAFKA_BROKER: localhost:9092
    
    - name: Generate Allure Report
      run: mvn allure:report
      if: always()
    
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          target/surefire-reports/
          target/site/allure-maven-plugin/
    
    - name: Upload Allure Report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: allure-report
        path: target/site/allure-maven-plugin/

  docker-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker Image
      run: docker build -t epam-test-framework .
    
    - name: Run Tests in Docker
      run: |
        docker run --rm --network host epam-test-framework mvn test -Dtest=SimpleTests
        docker run --rm --network host epam-test-framework mvn test -Dtest=ApiTests
